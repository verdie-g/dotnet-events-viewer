@using System.Text.Json
@using NetTrace

@implements IDialogContentComponent<Event>

<FluentDialogBody>
    <p>
        Capture Thread: @Content.CaptureThreadId<br />
        Thread: @Content.ThreadId<br />
        TimeStamp: @Content.TimeStamp<br />
        Activity: @Content.ActivityId<br />
        Related Activity: @Content.RelatedActivityId<br />
        @if (Content.Payload.Count != 0)
        {
            @:Payload:
        }
    </p>
    @if (Content.Payload.Count != 0)
    {
        <pre>
            <code>@JsonSerializer.Serialize(Content.Payload, SerializerOptions)</code>
        </pre>
    }
    @if (Content.StackTrace.Frames.Length != 0)
    {
        <p>Stack Trace:</p>
        <pre>
            <code>
            @foreach (var frame in Content.StackTrace.Frames)
            {
                @:0x@(frame.Address.ToString("X")) @(frame.ToString())@(Environment.NewLine)
            }
            </code>
        </pre>
    }
</FluentDialogBody>

@code
{
    private static readonly JsonSerializerOptions SerializerOptions = new()
    {
        WriteIndented = true,
    };

    [Parameter]
    public Event Content { get; set; } = null!;
}
